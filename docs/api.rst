API
===

.. function:: [s,f,t]=zftftb_pretty_sonogram(signal,fs,varargin)

	:param signal: microphone signal
	:param fs: sampling rate (default=48e3)
	:param varargin: parameter/value pairs (see table)

	:returns s: STFT magnitude
	:returns f: vector of frequency bins
	:returns t: vector of time bins


	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| Parameter  | Description                                              | Format   | Options             | Default    |
	+============+==========================================================+==========+=====================+============+
	| overlap    | STFT overlap (ms)                                        | integer  | N/A                 | ``67``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| len        | STFT window length (ms)                                  | integer  | N/A                 | ``70``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| nfft       | FFT size (samples)                                       | integer  | ``[] auto``         | ``auto``   |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| zeropad    | Zero-pad (samples)                                       | integer  | ``[] none, 0 auto`` | ``[]``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| filtering  | High-pass filter corner Fs (5-pole Elliptic)             | float    | ``[] none``         | ``[]``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| clipping   | Spectrogram clipping (logn units)                        | 2 floats | N/A                 | ``[-2 2]`` |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| units      | Set spectrogram units                                    | string   | ``ln,db,lin``       | ``ln``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| postproc   | Prettify spectrogram (non-linear)                        | string   | ``y,n``             | ``y``      |
	+------------+----------------------------------------------------------+----------+---------------------+------------+
	| saturation | Image saturation (brightness of image, postproc on only) | float    | ``[0-1]``           | ``.8``     |
	+------------+----------------------------------------------------------+----------+---------------------+------------+

.. function:: [sdi,f,t,contours]=zftftb_sdi(signals,fs,varargin)

	:param signals: samples x trials matrix of microphone signals
	:param fs: sampling rate 
	:param varargin: parameter/value pairs

	:returns sdi: spectral density image, imaginary and real components
	:returns f: vector of frequency bins
	:returns t: vector of time bins
	:returns contours: time-frequency contours, imaginary and real components

	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| Parameter   | Description                                                         | Format  | Options         | Default   |
	+=============+=====================================================================+=========+=================+===========+
	| tscale      | time-scale for Gaussian window (ms)                                 | float   | N/A             | ``1.5``   |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| len         | length of Gaussian window (ms)                                      | float   | N/A             | ``34``    |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| nfft        | fft length (ms)                                                     | float   | ``[] for auto`` | ``[]``    |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| overlap     | STFT overlap (ms)                                                   | float   | N/A             | ``33``    |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| filtering   | Corner Fs (Hz) for high-pass filter for mic trace (4-pole elliptic) | float   | ``[] for none`` | ``500``   |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| mask_only   | Exclude power weighting in spectral density image                   | logical | N/A             | ``false`` |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| spec_thresh | Threshold on power-weighted contour image                           | float   | N/A             | ``.78``   |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| norm_amp    | Normalize mic traces by their abs(max) value                        | logical | N/A             | ``true``  |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+
	| weighting   | Power weighting                                                     | string  | ``log,lin``     | ``log``   |
	+-------------+---------------------------------------------------------------------+---------+-----------------+-----------+


.. function:: scores=zftftb_sdi_simscores(contour_group1,contour_group2,f,t,varargin)

	:param contour_group1: time-frequency contours group 1
	:param contour_group2: time-frequency contours group 2
	:param f: vector of frequency bins
	:param t: vector of time bins
	:param varargin: parameter/value pairs

	:returns scores: cell array of similarity scores

	+------------+------------------------------------------+----------+------------------------------------------+----------+
	| Parameter  | Description                              | Format   | Options                                  | Default  |
	+============+==========================================+==========+==========================================+==========+
	| time_range | Min and max time points to consider      | 2 floats | ``[] to use first and last time points`` | ``[]``   |
	+------------+------------------------------------------+----------+------------------------------------------+----------+
	| freq_band  | Min and max frequency points to consider | 2 floats | N/A                                      | [1 10e3] |
	+------------+------------------------------------------+----------+------------------------------------------+----------+

.. function:: zftftb_song_chop(dir,varargin)

	:param dir: directory to process
	:param varargin: parameter/value pairs

	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| Parameter          | Description                                                                                        | Format             | Options          | Default       |
	+====================+====================================================================================================+====================+==================+===============+
	| song_len           | window length for computing power band crossing (s)                                                | float              | N/A              | ``.005``      |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_overlap       | window overlap for computing power band crossing (s)                                               | float              | N/A              | ``0``         |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_band          | frequency band that contains singing (Hz)                                                          | 2 ints             | N/A              | ``[3e3 7e3]`` |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_ratio         | ratio of pwer in the ``song_band`` and outside of the ``song_band``                                | float              | N/A              | ``2``         |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_duration      | smoothing kernel for ``song_ratio`` (s)                                                            | float              | N/A              | ``.8``        |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_pow           | threshold on power in singing band                                                                 | float              | N/A              | ``-inf``      |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| song_thresh        | threshold on smoothed song ratio for song detection                                                | float              | N/A              | ``.1``        |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| custom_load        | anonymous function used for loading data from MATLAB files (see ``audio_load`` from above section) | anonymous function | N/A              |               |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| file_filt          | filter for files to check                                                                          | string             | N/A              | ``'\*.wav'``  |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| audio_pad          | pad to include before and after detected song (s)                                                  | float              | N/A              | ``1``         |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| colors             | spectrogram colormap                                                                               | string             | MATLAB colormaps | ``hot``       |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| disp_band          | frequency band to use for spectrograms                                                             | 2 ints             | N/A              | ``[1 9e3]``   |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| clipping           | spectrogram clipping (logn units)                                                                  | 2 floats           | N/A              | ``[-2 2]``    |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| export_wav         | export .wav files?                                                                                 | logical            | N/A              | ``TRUE``      |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+
	| export_spectrogram | export spectrograms as .gifs?                                                                      | logical            | N/A              | ``TRUE``      |
	+--------------------+----------------------------------------------------------------------------------------------------+--------------------+------------------+---------------+

.. function:: zftftb_song_clust(dir,varargin)

	:param dir: directory to process
	:param varargin: parameter/value pairs

	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| Parameter  | Description                                                    | Format             | Options          | Default      |
	+============+================================================================+====================+==================+==============+
	| colors     | colormap to use for spectrograms                               | string             | MATLAB colormaps | ``hot``      |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| len        | STFT window length for spectrograms (ms)                       | integer            | N/A              | ``34``       |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| overlap    | STFT overlap (ms)                                              | integer            | N/A              | ``33``       |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| disp_band  | STFT frequency range                                           | 2 ints             | N/A              | ``[1 10e3]`` |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| audio_load | Anonymous function used for loading audio data from .mat files | anonymous function | N/A              |              |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| data_load  | Anonymous function used for loading data to align              | anon               | N/A              |              |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| file_filt  | File extension filter                                          | string             | ``auto,wav,mat`` | ``auto``     |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| extract    | Extract .gif, .wav, and .mat files post-alignment              | logical            | N/A              | ``true``     |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+
	| clust_lim  | Limit on number of points to show for cluster cutting          | integer            | N/A              | ``1e4``      |
	+------------+----------------------------------------------------------------+--------------------+------------------+--------------+

.. function:: [song_idx,t]=zftftb_song_det(signal,fs,varargin)

	:param signal: microphone signal
	:param fs: sampling rate (default=48e3)
	:param varargin: parameter/value pairs

	:returns song_idx: vector of logicals indicating presence or absence of song
	:returns t: vector of time bins
	
	+---------------+-----------------------------------------+----------+---------+---------------+
	| Parameter     | Description                             | Format   | Options | Default       |
	+===============+=========================================+==========+=========+===============+
	| len           | Window length (s) for computing power   | float    | N/A     | ``.005``      |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| song_band     | Frequency range (Hz) for detecting song | 2 floats | N/A     | ``[2e3 6e3]`` |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| overlap       | STFT overlap for computing power (s)    | float    | N/A     | ``0``         |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| song_duration | smoothing for power calculation (s)     | float    | N/A     | ``.8``        |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| ratio_thresh  | ratio of song to nonsong in power       | float    | N/A     | ``2``         |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| pow_thresh    | Threshold for song power                | float    | N/A     | ``-inf``      |
	+---------------+-----------------------------------------+----------+---------+---------------+
	| song_thresh   | Threshold for song ratio                | float    | N/A     | ``.2``        |
	+---------------+-----------------------------------------+----------+---------+---------------+
